binary_expression
multiplicative_expression
relational_expression
additive_expression
shift_expression
equality_expression
and_expression
exclusive_or_expression
inclusive_or_expression
logical_and_expression
logical_or_expression
0
unary_expression
cast_expression
postfix_expression
unary_expression
0
0
translation_unit
y
y
m
y
external_declaration
y
y
u
FUNCTION_DEFINITION
DECLARATION
y
declaration
n
y
y
u
NORMAL
STATIC_ASSERT
y
declaration_specifiers
y
n
y
n
y
n
y
n
y
n
u
STORAGE
TYPE_SPEC
TYPE_QUAL
FUNCTION_SPEC
ALIGHTMENT_SPEC
y
alignment_specifier
y
y
u
TYPE_NAME
CONST_EXPR
y
constant_expression
y
n
y
conditional_expression
BINARY
y
y
u
BINARY
TERRINARY
y
binary_expression
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
u
ADD
SUB
BIT_AND
EQU
NEQ
BIT_XOR
BIT_OR
LOGIC_AND
LOGIC_OR
NONE
MULT
DIV
MOD
LTH
GTH
LTE
GTE
LEFT_SHIFT
RIGHT_SHIFT
y
expression
y
y
m
y
assignment_expression
y
y
u
NONE
ASSIGNMENT
y
assignment_operator
y
yy
y
y
y
y
y
y
y
y
y
y
e
ASS
MUL_ASS
DIV_ASS
MOD_ASS
ADD_ASS
SUB_ASS
LEFT_ASS
RIGHT_ASS
AND_ASS
XOR_ASS
OR_ASS
y
function_definition
y
y
m
y
compound_statement
y
y
m
y
block_item_list
y
y
m
y
block_item
y
y
u
DECLARATION
STATEMENT
y
declaration_list
y
y
m
y
declarator
y
y
e
POINTER
NO_POINTER
y
direct_declarator
y
y
y
y
y
y
y
y
y
y
y
y
y
y
u
IDENTIFIER
DECL1
DECL2
DECL3
DECL4
DECL5
DECL6
DECL7
DECL8
DECL9
DECL10
DECL11
DECL12
DECL12
y
function_specifier
y
y
e
INLINE
NORETURN
y
identifier_list
y
y
m
y
init_declarator_list
y
y
m
y
init_declarator
y
y
e
INITIALISED
UNINITIALISED
y
initializer
y
n
y
u
INIT_LIST
ASS_EXPR
y
initializer_list
y
y
y
y
m
y
designation
y
n
y
designator_list
y
y
m
y
designator
y
y
u
INDEX
DOT
y
parameter_type_list
y
y
e
ELLIPSIS
NO_ELLIPSIS
y
parameter_list
y
y
m
y
parameter_declaration
y
y
y
u
DECL
ABST_DECL
NONE
y
abstract_declarator
y
y
y
m
y
direct_abstract_declarator
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
u
DECL1
DECL2
DECL3
DECL4
DECL5
DECL6
DECL7
DECL8
DECL9
DECL10
DECL11
DECL12
DECL13
DECL14
DECL15
DECL16
DECL17
DECL18
DECL19
DECL20
DECL21
y
pointer
y
y
y
y
m
y
statement
y
y
y
y
y
y
u
LABELED
COMPOUND
EXPRESSION
SELECTION
ITERATION
JUMP
y
expression_statement
y
y
m
y
iteration_statement
y
y
y
y
y
y
u
WHILE_
DO_WHILE
FOR1
FOR2
FOR3
FOR4
y
jump_statement
y
y
y
y
y
u
GOTO
CONT
BREAK_
RETURN_
RETUR_EXPR
y
labeled_statement
y
y
y
u
IDENTIFIER
CASE_
DEFAULT_
y
0
